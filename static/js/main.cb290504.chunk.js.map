{"version":3,"sources":["components/Form/Form.js","components/App/App.js","index.js"],"names":["Form","props","react_default","a","createElement","className","info","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userInput","list","handleChange","bind","assertThisInitialized","deleteFrom","deleteForm","submit","event","setState","defineProperty","target","name","value","index","splice","e","preventDefault","concat","toConsumableArray","_this2","items","map","item","i","key","Form_Form","onClick","onSubmit","type","placeholder","onChange","Component","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"oTAGe,SAASA,EAAKC,GAC3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZJ,EAAMK,UCoDEC,cArDb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,UAAW,GACXC,KAAM,IAERT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACpBA,EAAKa,WAAab,EAAKc,WAAWH,KAAhBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAClBA,EAAKe,OAASf,EAAKe,OAAOJ,KAAZV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KARFA,4EAWDgB,GACXb,KAAKc,SAALhB,OAAAiB,EAAA,EAAAjB,CAAA,GAAgBe,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,2CAGxCC,GACT,IAAIb,EAAON,KAAKI,MAAME,KACtBA,EAAKc,OAAOD,EAAM,GAClBnB,KAAKc,SAAS,CAACR,KAAMA,mCAGhBe,GACLA,EAAEC,iBACFtB,KAAKc,SAAS,CAACR,KAAI,CAAGN,KAAKI,MAAMC,WAAdkB,OAAAzB,OAAA0B,EAAA,EAAA1B,CAA4BE,KAAKI,MAAME,SAC1DN,KAAKc,SAAS,CAACT,UAAW,sCAGnB,IAAAoB,EAAAzB,KAEH0B,EAAQ1B,KAAKI,MAAME,KAAKqB,IAAI,SAACC,EAAMC,GACrC,OACEtC,EAAAC,EAAAC,cAAA,OAAKqC,IAAKD,EAAGnC,UAAU,aACrBH,EAAAC,EAAAC,cAACsC,EAAD,CAAMpC,KAAMiC,IACZrC,EAAAC,EAAAC,cAAA,UAAQuC,QAAS,kBAAMP,EAAKd,WAAWkB,KAAvC,aAKN,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAMwC,SAAUjC,KAAKY,QACnBrB,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAOjB,KAAK,YAAYkB,YAAY,YAAYjB,MAAOlB,KAAKI,MAAMC,UAAW+B,SAAUpC,KAAKO,eACxGhB,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZgC,WA/COW,aCClBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cb290504.chunk.js","sourcesContent":["import React from 'react';\nimport './Form.css';\n\nexport default function Form(props) {\n  return (\n    <div className='form'>\n      {props.info}\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Form from '../Form/Form';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      list: []\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteFrom = this.deleteForm.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value});\n  };\n\n  deleteForm(index) {\n    let list = this.state.list;\n    list.splice(index,1);\n    this.setState({list: list});\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.setState({list: [this.state.userInput, ...this.state.list]});\n    this.setState({userInput: ''});\n  };\n\n  render() {\n\n    let items = this.state.list.map((item, i) => {\n      return (\n        <div key={i} className='wholeForm'>\n          <Form info={item}/>\n          <button onClick={() => this.deleteForm(i)}>Delete</button>\n        </div>\n      )\n    })\n\n    return (\n      <div className='App'>\n        <h1>Form App</h1>\n        <form onSubmit={this.submit}>\n          <input type='text' name='userInput' placeholder='Type Here' value={this.state.userInput} onChange={this.handleChange}/>\n          <button>Submit</button>\n        </form>\n        <div className='list'>\n          {items}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}